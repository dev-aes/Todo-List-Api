name: 'Todos management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/todos
    metadata:
      title: 'Display all todos of an authenticated user'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "current_page": 1,
          "data":[
          {
          id": 2,
          "user_id": 6,
          "todo": "Play football",
          "due": "2021-10-25",
          "is_done": 0,
          "created_at": "2021-10-24T06:40:05.000000Z",
          "updated_at": "2021-10-24T06:41:31.000000Z"
          },
          {
            "id": 3,
           "user_id": 6,
           "todo": "Take a outside",
           "due": "2021-10-25",
          "is_done": 0,
          "created_at": "2021-10-24T07:39:03.000000Z",
          "updated_at": "2021-10-24T07:39:03.000000Z"
           },
          ],
          "first_page_url": "http://localhost:8000/api/todos?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/todos?page=1",
          "links": [
          {
             "url": null,
              "label": "&laquo; Previous",
              "active": false
          },
          {
          "url": "http://localhost:8000/api/todos?page=1",
          "label": "1",
          "active": true
          },
          {
           "url": null,
           "label": "Next &raquo;",
          "active": false
          }
          ],
          "next_page_url": null,
          "path": "http://localhost:8000/api/todos",
          "per_page": 10,
          "prev_page_url": null,
          "to": 6,
          "total": 6
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/todos
    metadata:
      title: 'Create a Todo'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      todo:
        name: todo
        description: 'Task to do. Must be at least 5 characters. Must not be greater than 50 characters.'
        required: true
        example: 'Take a walk outside'
        type: string
      due:
        name: due
        description: 'The due date of the currently added task. Must be a valid date.'
        required: true
        example: 01-01-2021
        type: string
      is_done:
        name: is_done
        description: 'The status of a specific task.'
        required: true
        example: true
        type: boolean
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Task Added Successfully",
          "result": {
            "todo": "Take a shower",
            "due": "2021-10-25",
            "user_id": 6,
            "updated_at": "2021-10-24T07:50:43.000000Z",
            "created_at": "2021-10-24T07:50:43.000000Z",
           "id": 8
          }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/todos/{id}'
    metadata:
      title: 'Update a specific Todo'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 13
        type: integer
    queryParameters: []
    bodyParameters:
      todo:
        name: todo
        description: 'Task to do. Must be at least 5 characters. Must not be greater than 50 characters.'
        required: true
        example: 'Take a walk outside'
        type: string
      due:
        name: due
        description: 'The due date of the currently added task. Must be a valid date.'
        required: true
        example: 01-01-2021
        type: string
      is_done:
        name: is_done
        description: 'The status of a specific task.'
        required: true
        example: false
        type: boolean
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Task Updated Successfully",
          "result": {
            "todo": "Take a shower but not on the afternoon",
            "due": "2021-10-25",
            "user_id": 6,
            "updated_at": "2021-10-24T07:50:60.000000Z",
            "created_at": "2021-10-24T07:50:60.000000Z",
           "id": 8
          }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/todos/{id}'
    metadata:
      title: 'Delete a specific Todo'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 18
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Task Deleted Successfully"
          }
        headers: []
        description: '201'
    responseFields: []
