## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Auth Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      title: 'Login User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: noel26@example.com
        type: string
      password:
        name: password
        description: ''
        required: true
        example: dolorem
        type: string
    responses:
      -
        status: 201
        content: |-
          {
          "token": "Sample Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9....."
          }
        headers: []
        description: '201'
      -
        status: 401
        content: '"Error: Invalid Credentials"'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/profile
    metadata:
      title: 'Update User''s Password'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 12 characters.'
        required: true
        example: ''
        type: string
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Password updated successfully"
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      title: 'Register User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 5 characters. Must not be greater than 15 characters.'
        required: true
        example: kdzbbin
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hill.bobbie@example.org
        type: string
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 12 characters.'
        required: true
        example: aba
        type: string
      password_confirmation:
        name: password_confirmation
        description: 'Must be at least 6 characters. Must not be greater than 12 characters.'
        required: true
        example: fzfrzcmtrocc
        type: string
    responses:
      -
        status: 201
        content: |-
          {
          {
          "message": "User registered successfully"
          }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      title: 'Get the authenticated User'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "result": {
            "id": 6,
           "name": "John Doe",
            "email": "user@gmail.com",
            "email_verified_at": null,
           "created_at": "2021-10-24T06:14:50.000000Z",
           "updated_at": "2021-10-24T06:14:50.000000Z"
          }
          }
        headers: []
        description: '201'
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      title: 'Logout User'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Logged Out successfully"
          }
        headers: []
        description: '201'
    responseFields: []
